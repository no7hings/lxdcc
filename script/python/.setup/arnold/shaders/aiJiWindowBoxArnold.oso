OpenShadingLanguage 1.00
# Compiled by oslc 1.11.6
# options: -o /home/dongchangbao/packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.oso.86ba-5d13-a04a-1d86.tmp -I/l/packages/pg/prod/mtoa/4.2.1.1/platform-linux/maya-2019/plug-ins/../bin/../osl/include
shader aiJiWindowBoxArnold	%meta{string,help,"<h1>Windows thingy!</h1>Hello, we put windows on mesh kkkk..."} 
param	float	Hue	0		%meta{string,widget,"null"}  %read{0,0} %write{2147483647,-1}
param	float	Saturation	1		%meta{string,widget,"null"}  %read{0,0} %write{2147483647,-1}
param	float	Value	1		%meta{string,widget,"null"}  %read{0,0} %write{2147483647,-1}
param	color	InputMin	0 0 0		%meta{string,help,"The input value that maps to the darkest output. Incoming black level. "} %meta{string,widget,"null"}  %read{272,272} %write{2147483647,-1}
param	color	InputMax	1 1 1		%meta{string,help,"The input value that maps to the brightst output. Incoming white level. "} %meta{string,widget,"null"}  %read{273,273} %write{2147483647,-1}
param	float	MidTones	1		%meta{string,help,"Adjusts the MidTones/Gamma."} %meta{float,min,0.00999999978} %meta{float,max,9.98999977} %meta{string,widget,"null"}  %read{288,288} %write{2147483647,-1}
param	color	OutputMin	0 0 0		%meta{string,help,"The output black level."} %meta{string,widget,"null"}  %read{290,290} %write{2147483647,-1}
param	color	OutputMax	1 1 1		%meta{string,help,"The output white level."} %meta{string,widget,"null"}  %read{290,290} %write{2147483647,-1}
param	int	Clamp	1		%meta{string,widget,"checkBox"} %meta{string,help,"Clamp the output to the 0-1 range for each component"} %meta{string,widget,"null"}  %read{291,291} %write{2147483647,-1}
param	int	zUpAxis	0		%meta{string,widget,"checkBox"} %meta{string,widget,"null"}  %read{29,29} %write{2147483647,-1}
param	string	input_tex	""		%meta{string,widget,"filename"} %meta{string,widget,"null"}  %read{256,269} %write{2147483647,-1}
param	int	textureFlip	0		%meta{string,widget,"checkBox"} %meta{string,widget,"null"}  %read{16,240} %write{2147483647,-1} %derivs
param	int	textureFlop	0		%meta{string,widget,"checkBox"} %meta{string,widget,"null"}  %read{21,227} %write{2147483647,-1} %derivs
param	float	roomDepth	1		%meta{float,min,0.100000001} %meta{float,max,100} %meta{string,widget,"null"}  %read{2,2} %write{2147483647,-1} %derivs
param	float	widthOverscan	0		%meta{float,min,0} %meta{float,max,0.899999976} %meta{string,widget,"null"}  %read{9,9} %write{2147483647,-1} %derivs
param	float	heightOverscan	0		%meta{float,min,0} %meta{float,max,0.899999976} %meta{string,widget,"null"}  %read{5,5} %write{2147483647,-1} %derivs
param	int	enableMidground	0		%meta{string,widget,"checkBox"} %meta{string,widget,"null"}  %read{257,257} %write{2147483647,-1}
param	float	midgroundDepth	0.5		%meta{float,min,0.0500000007} %meta{float,max,99} %meta{string,widget,"null"}  %read{14,14} %write{2147483647,-1} %derivs
param	float	midgroundOffsetX	0		%meta{string,widget,"null"}  %read{24,24} %write{2147483647,-1} %derivs
param	float	midgroundOffsetY	0		%meta{string,widget,"null"}  %read{19,19} %write{2147483647,-1} %derivs
param	float	windowAspect	0		%meta{string,widget,"null"}  %read{38,49} %write{2147483647,-1} %derivs
param	int	enableCurtains	0		%meta{string,widget,"boolean"} %meta{string,widget,"null"}  %read{265,265} %write{2147483647,-1}
oparam	color	result	0 0 0		%read{2147483647,-1} %write{298,298}
global	vector	I	%read{26,26} %write{2147483647,-1} %derivs
global	float	u	%read{53,58} %write{2147483647,-1} %derivs
global	float	v	%read{53,58} %write{2147483647,-1} %derivs
local	color	___337_Out	%read{295,297} %write{290,296}
local	color	___337_col	%read{274,289} %write{273,287}
local	color	___337_hsv	%read{275,287} %write{274,286}
local	vector	HSV	%read{276,284} %write{0,0}
local	float	roomDepthMult	%read{12,168} %write{3,3} %derivs
local	float	heightOverscanMult	%read{40,61} %write{7,7} %derivs
local	float	widthOverscanMult	%read{39,61} %write{11,11} %derivs
local	float	midgroundDepthMult	%read{73,186} %write{15,15} %derivs
local	float	midgroundOffY	%read{204,204} %write{20,20} %derivs
local	float	midgroundOffX	%read{204,204} %write{25,25} %derivs
local	vector	objI	%read{31,182} %write{28,52} %derivs
local	color	objPOrig	%read{214,214} %write{57,57} %derivs
local	color	objP	%read{67,184} %write{64,64} %derivs
local	vector	sections	%read{67,159} %write{66,66} %derivs
local	color	baseDepth	%read{78,83} %write{70,70} %derivs
local	color	mgDepth	%read{2147483647,-1} %write{74,74}
local	color	baseBack	%read{163,181} %write{77,77} %derivs
local	color	baseWidth	%read{87,91} %write{78,78} %derivs
local	color	baseDepthX	%read{101,101} %write{82,82} %derivs
local	color	baseDepthY	%read{95,95} %write{86,86} %derivs
local	color	baseWidthX	%read{97,97} %write{90,90} %derivs
local	color	baseWidthY	%read{99,99} %write{94,94} %derivs
local	float	horizU	%read{103,175} %write{96,96} %derivs
local	float	vertU	%read{134,139} %write{98,98} %derivs
local	float	horizV	%read{104,109} %write{100,100} %derivs
local	float	vertV	%read{133,176} %write{102,102} %derivs
local	float	sideWallsMask	%read{115,128} %write{108,108} %derivs
local	color	sideWallsUV	%read{114,120} %write{110,110} %derivs
local	color	rWallUV	%read{224,224} %write{117,117} %derivs
local	color	lWallUV	%read{126,225} %write{124,132} %derivs
local	float	FloorCeilMask	%read{145,158} %write{138,138} %derivs
local	color	FloorCeilUV	%read{144,150} %write{140,140} %derivs
local	color	ceilUV	%read{223,223} %write{147,147} %derivs
local	color	floorUV	%read{156,223} %write{154,162} %derivs
local	color	backWallUV	%read{226,226} %write{179,179} %derivs
local	color	midgroundUV	%read{190,260} %write{189,248} %derivs
local	float	midgroundMask	%read{262,262} %write{203,203}
local	color	curtainsUV	%read{216,268} %write{214,253} %derivs
local	color	finalUV	%read{237,255} %write{226,244} %derivs
local	color	roomRGB	%read{263,264} %write{256,256}
local	color	finalRGB	%read{270,298} %write{263,297}
local	float	___342_midgroundA	%read{262,262} %write{261,261}
local	color	___342_midgroundRGB	%read{263,263} %write{261,261}
local	float	___344_curtainsA	%read{270,270} %write{269,269}
local	color	___344_curtainsRGB	%read{270,270} %write{269,269}
const	float	$const1	0.100000001		%read{3,25} %write{2147483647,-1}
const	float	$const3	100		%read{2,2} %write{2147483647,-1}
const	string	$const4	"clamp"		%read{1,294} %write{2147483647,-1}
temp	float	$tmp1	%read{3,3} %write{2,2} %derivs
const	int	$const5	1		%read{17,282} %write{2147483647,-1}
temp	float	$tmp2	%read{7,7} %write{6,6} %derivs
const	int	$const6	0		%read{29,278} %write{2147483647,-1}
const	float	$const7	0		%read{6,292} %write{2147483647,-1}
const	float	$const8	0.899999976		%read{5,9} %write{2147483647,-1}
temp	float	$tmp3	%read{6,6} %write{5,5} %derivs
const	float	$const9	1		%read{7,293} %write{2147483647,-1}
temp	float	$tmp4	%read{11,11} %write{10,10} %derivs
temp	float	$tmp5	%read{10,10} %write{9,9} %derivs
const	float	$const10	0.0500000007		%read{15,15} %write{2147483647,-1}
const	float	$const11	0.00999999978		%read{12,12} %write{2147483647,-1}
temp	float	$tmp6	%read{14,14} %write{12,12} %derivs
temp	float	$tmp7	%read{15,15} %write{14,14} %derivs
const	int	$const12	2		%read{16,286} %write{2147483647,-1}
temp	int	$tmp8	%read{17,17} %write{16,16} %derivs
temp	int	$tmp9	%read{18,18} %write{17,17} %derivs
temp	float	$tmp10	%read{20,20} %write{19,19} %derivs
temp	float	$tmp11	%read{19,19} %write{18,18} %derivs
temp	int	$tmp12	%read{22,22} %write{21,21} %derivs
temp	int	$tmp13	%read{23,23} %write{22,22} %derivs
temp	float	$tmp14	%read{25,25} %write{24,24} %derivs
temp	float	$tmp15	%read{24,24} %write{23,23} %derivs
const	string	$const13	"object"		%read{28,28} %write{2147483647,-1}
temp	vector	$tmp16	%read{28,28} %write{26,26} %derivs
const	string	$const14	"transform"		%read{27,27} %write{2147483647,-1}
const	string	$const15	"common"		%read{28,28} %write{2147483647,-1}
temp	int	$tmp17	%read{30,30} %write{29,29}
temp	vector	$tmp18	%read{41,41} %write{37,37} %derivs
temp	float	$tmp19	%read{32,32} %write{31,31} %derivs
temp	float	$tmp20	%read{37,37} %write{32,32} %derivs
temp	float	$tmp21	%read{34,34} %write{33,33} %derivs
temp	float	$tmp22	%read{37,37} %write{34,34} %derivs
temp	float	$tmp23	%read{36,36} %write{35,35} %derivs
temp	float	$tmp24	%read{37,37} %write{36,36} %derivs
temp	color	$tmp25	%read{41,41} %write{40,40} %derivs
temp	float	$tmp26	%read{39,39} %write{38,38} %derivs
temp	float	$tmp27	%read{40,40} %write{39,39} %derivs
temp	vector	$tmp28	%read{52,52} %write{48,48} %derivs
temp	float	$tmp29	%read{43,43} %write{42,42} %derivs
temp	float	$tmp30	%read{48,48} %write{43,43} %derivs
temp	float	$tmp31	%read{45,45} %write{44,44} %derivs
temp	float	$tmp32	%read{48,48} %write{45,45} %derivs
temp	float	$tmp33	%read{47,47} %write{46,46} %derivs
temp	float	$tmp34	%read{48,48} %write{47,47} %derivs
temp	color	$tmp35	%read{52,52} %write{51,51} %derivs
temp	float	$tmp36	%read{50,50} %write{49,49} %derivs
temp	float	$tmp37	%read{51,51} %write{50,50} %derivs
temp	color	$tmp38	%read{54,54} %write{53,53} %derivs
const	float	$const16	0.5		%read{53,102} %write{2147483647,-1}
temp	color	$tmp39	%read{55,55} %write{54,54} %derivs
const	float	$const17	2		%read{54,251} %write{2147483647,-1}
temp	color	$tmp40	%read{56,56} %write{55,55} %derivs
temp	color	$tmp41	%read{57,57} %write{56,56} %derivs
temp	color	$tmp42	%read{59,59} %write{58,58} %derivs
temp	color	$tmp43	%read{60,60} %write{59,59} %derivs
temp	color	$tmp44	%read{62,62} %write{60,60} %derivs
temp	color	$tmp45	%read{62,62} %write{61,61} %derivs
temp	color	$tmp46	%read{63,63} %write{62,62} %derivs
temp	color	$tmp47	%read{64,64} %write{63,63} %derivs
temp	vector	$tmp48	%read{66,66} %write{65,65} %derivs
temp	color	$tmp49	%read{70,70} %write{67,67} %derivs
temp	vector	$tmp50	%read{69,69} %write{68,68} %derivs
temp	vector	$tmp51	%read{70,70} %write{69,69} %derivs
temp	color	$tmp52	%read{74,74} %write{71,71}
temp	vector	$tmp53	%read{73,73} %write{72,72}
temp	vector	$tmp54	%read{74,74} %write{73,73}
temp	color	$tmp55	%read{77,77} %write{75,75} %derivs
temp	vector	$tmp56	%read{77,77} %write{76,76} %derivs
temp	float	$tmp57	%read{80,80} %write{79,79} %derivs
temp	vector	$tmp58	%read{81,81} %write{80,80} %derivs
temp	vector	$tmp59	%read{82,82} %write{81,81} %derivs
temp	float	$tmp60	%read{84,84} %write{83,83} %derivs
temp	vector	$tmp61	%read{85,85} %write{84,84} %derivs
temp	vector	$tmp62	%read{86,86} %write{85,85} %derivs
temp	float	$tmp63	%read{88,88} %write{87,87} %derivs
temp	vector	$tmp64	%read{89,89} %write{88,88} %derivs
temp	vector	$tmp65	%read{90,90} %write{89,89} %derivs
temp	float	$tmp66	%read{92,92} %write{91,91} %derivs
temp	vector	$tmp67	%read{93,93} %write{92,92} %derivs
temp	vector	$tmp68	%read{94,94} %write{93,93} %derivs
temp	float	$tmp69	%read{96,96} %write{95,95} %derivs
temp	float	$tmp70	%read{98,98} %write{97,97} %derivs
temp	float	$tmp71	%read{100,100} %write{99,99} %derivs
temp	float	$tmp72	%read{102,102} %write{101,101} %derivs
temp	float	$tmp73	%read{108,108} %write{103,103} %derivs
temp	float	$tmp74	%read{108,108} %write{107,107} %derivs
temp	float	$tmp75	%read{106,106} %write{105,105} %derivs
temp	float	$tmp76	%read{105,105} %write{104,104} %derivs
temp	float	$tmp77	%read{107,107} %write{106,106} %derivs
temp	color	$tmp78	%read{110,110} %write{109,109} %derivs
const	float	$const19	3		%read{110,251} %write{2147483647,-1}
temp	color	$tmp79	%read{114,114} %write{113,113} %derivs
temp	float	$tmp80	%read{113,113} %write{111,111} %derivs
temp	float	$tmp81	%read{113,113} %write{112,112} %derivs
temp	color	$tmp82	%read{115,115} %write{114,114} %derivs
temp	color	$tmp83	%read{117,117} %write{115,115} %derivs
temp	float	$tmp84	%read{117,117} %write{116,116} %derivs
temp	color	$tmp85	%read{120,120} %write{119,119} %derivs
temp	float	$tmp86	%read{119,119} %write{118,118} %derivs
temp	color	$tmp87	%read{121,121} %write{120,120} %derivs
temp	color	$tmp88	%read{124,124} %write{121,121} %derivs
temp	float	$tmp89	%read{123,123} %write{122,122} %derivs
temp	float	$tmp90	%read{124,124} %write{123,123} %derivs
temp	float	$tmp91	%read{127,127} %write{125,125} %derivs
temp	float	$tmp92	%read{127,127} %write{126,126} %derivs
temp	float	$tmp93	%read{128,128} %write{127,127} %derivs
temp	float	$tmp94	%read{131,131} %write{128,128} %derivs
temp	float	$tmp95	%read{130,130} %write{129,129} %derivs
temp	float	$tmp96	%read{131,131} %write{130,130} %derivs
temp	float	$tmp97	%read{132,132} %write{131,131} %derivs
temp	float	$tmp98	%read{138,138} %write{133,133} %derivs
temp	float	$tmp99	%read{138,138} %write{137,137} %derivs
temp	float	$tmp100	%read{136,136} %write{135,135} %derivs
temp	float	$tmp101	%read{135,135} %write{134,134} %derivs
temp	float	$tmp102	%read{137,137} %write{136,136} %derivs
temp	color	$tmp103	%read{140,140} %write{139,139} %derivs
temp	color	$tmp104	%read{144,144} %write{143,143} %derivs
temp	float	$tmp105	%read{143,143} %write{141,141} %derivs
temp	float	$tmp106	%read{143,143} %write{142,142} %derivs
temp	color	$tmp107	%read{145,145} %write{144,144} %derivs
temp	color	$tmp108	%read{147,147} %write{145,145} %derivs
temp	float	$tmp109	%read{147,147} %write{146,146} %derivs
temp	color	$tmp110	%read{150,150} %write{149,149} %derivs
temp	float	$tmp111	%read{149,149} %write{148,148} %derivs
temp	color	$tmp112	%read{151,151} %write{150,150} %derivs
temp	color	$tmp113	%read{154,154} %write{151,151} %derivs
temp	float	$tmp114	%read{153,153} %write{152,152} %derivs
temp	float	$tmp115	%read{154,154} %write{153,153} %derivs
temp	float	$tmp116	%read{157,157} %write{155,155} %derivs
temp	float	$tmp117	%read{157,157} %write{156,156} %derivs
temp	float	$tmp118	%read{158,158} %write{157,157} %derivs
temp	float	$tmp119	%read{161,161} %write{158,158} %derivs
temp	float	$tmp120	%read{160,160} %write{159,159} %derivs
temp	float	$tmp121	%read{161,161} %write{160,160} %derivs
temp	float	$tmp122	%read{162,162} %write{161,161} %derivs
temp	float	$tmp123	%read{164,164} %write{163,163} %derivs
temp	vector	$tmp124	%read{167,167} %write{164,164} %derivs
temp	color	$tmp125	%read{166,166} %write{165,165} %derivs
temp	color	$tmp126	%read{167,167} %write{166,166} %derivs
temp	vector	$tmp127	%read{169,169} %write{167,167} %derivs
temp	float	$tmp128	%read{169,169} %write{168,168} %derivs
temp	vector	$tmp129	%read{170,170} %write{169,169} %derivs
temp	vector	$tmp130	%read{174,174} %write{170,170} %derivs
temp	color	$tmp131	%read{174,174} %write{173,173} %derivs
temp	float	$tmp132	%read{173,173} %write{171,171} %derivs
temp	float	$tmp133	%read{173,173} %write{172,172} %derivs
temp	vector	$tmp134	%read{179,179} %write{174,174} %derivs
temp	float	$tmp135	%read{178,178} %write{177,177} %derivs
temp	float	$tmp136	%read{177,177} %write{175,175} %derivs
temp	float	$tmp137	%read{177,177} %write{176,176} %derivs
temp	float	$tmp138	%read{179,179} %write{178,178} %derivs
temp	float	$tmp139	%read{189,189} %write{180,180} %derivs
temp	float	$tmp140	%read{182,182} %write{181,181} %derivs
temp	vector	$tmp141	%read{185,185} %write{182,182} %derivs
temp	float	$tmp142	%read{184,184} %write{183,183} %derivs
temp	color	$tmp143	%read{185,185} %write{184,184} %derivs
temp	vector	$tmp144	%read{187,187} %write{185,185} %derivs
temp	float	$tmp145	%read{187,187} %write{186,186} %derivs
temp	vector	$tmp146	%read{188,188} %write{187,187} %derivs
temp	vector	$tmp147	%read{189,189} %write{188,188} %derivs
temp	float	$tmp148	%read{203,203} %write{196,196}
temp	float	$tmp149	%read{191,191} %write{190,190}
temp	float	$tmp150	%read{195,195} %write{191,191}
temp	float	$tmp151	%read{193,193} %write{192,192}
temp	float	$tmp152	%read{194,194} %write{193,193}
temp	float	$tmp153	%read{195,195} %write{194,194}
temp	float	$tmp154	%read{196,196} %write{195,195}
temp	float	$tmp155	%read{203,203} %write{202,202}
temp	float	$tmp156	%read{201,201} %write{197,197}
temp	float	$tmp157	%read{200,200} %write{198,198}
temp	float	$tmp158	%read{200,200} %write{199,199}
temp	float	$tmp159	%read{201,201} %write{200,200}
temp	float	$tmp160	%read{202,202} %write{201,201}
temp	color	$tmp161	%read{205,205} %write{204,204} %derivs
temp	float	$tmp162	%read{207,207} %write{206,206} %derivs
temp	float	$tmp163	%read{209,209} %write{207,207} %derivs
temp	float	$tmp164	%read{209,209} %write{208,208} %derivs
temp	float	$tmp165	%read{210,210} %write{209,209} %derivs
temp	color	$tmp166	%read{214,214} %write{213,213} %derivs
temp	float	$tmp167	%read{213,213} %write{211,211} %derivs
temp	float	$tmp168	%read{213,213} %write{212,212} %derivs
temp	float	$tmp169	%read{217,217} %write{215,215} %derivs
temp	float	$tmp170	%read{217,217} %write{216,216} %derivs
temp	float	$tmp171	%read{218,218} %write{217,217} %derivs
temp	float	$tmp172	%read{221,221} %write{219,219} %derivs
temp	float	$tmp173	%read{221,221} %write{220,220} %derivs
temp	float	$tmp174	%read{222,222} %write{221,221} %derivs
temp	color	$tmp175	%read{224,224} %write{223,223} %derivs
temp	color	$tmp176	%read{225,225} %write{224,224} %derivs
temp	color	$tmp177	%read{226,226} %write{225,225} %derivs
temp	int	$tmp178	%read{228,228} %write{227,227}
temp	float	$tmp179	%read{231,231} %write{229,229} %derivs
temp	float	$tmp180	%read{231,231} %write{230,230} %derivs
temp	float	$tmp181	%read{232,232} %write{231,231} %derivs
temp	float	$tmp182	%read{235,235} %write{233,233} %derivs
temp	float	$tmp183	%read{235,235} %write{234,234} %derivs
temp	float	$tmp184	%read{236,236} %write{235,235} %derivs
temp	float	$tmp185	%read{238,238} %write{237,237} %derivs
temp	float	$tmp186	%read{239,239} %write{238,238} %derivs
temp	int	$tmp187	%read{241,241} %write{240,240}
temp	float	$tmp188	%read{243,243} %write{242,242} %derivs
temp	float	$tmp189	%read{244,244} %write{243,243} %derivs
temp	float	$tmp190	%read{247,247} %write{245,245} %derivs
temp	float	$tmp191	%read{247,247} %write{246,246} %derivs
temp	float	$tmp192	%read{248,248} %write{247,247} %derivs
temp	float	$tmp193	%read{250,250} %write{249,249} %derivs
temp	float	$tmp194	%read{252,252} %write{250,250} %derivs
temp	float	$tmp195	%read{252,252} %write{251,251} %derivs
temp	float	$tmp196	%read{253,253} %write{252,252} %derivs
temp	float	$tmp197	%read{256,256} %write{254,254} %derivs
temp	float	$tmp198	%read{256,256} %write{255,255} %derivs
temp	int	$tmp199	%read{258,258} %write{257,257}
temp	float	$tmp200	%read{261,261} %write{259,259} %derivs
temp	float	$tmp201	%read{261,261} %write{260,260} %derivs
const	string	$const20	"alpha"		%read{261,269} %write{2147483647,-1}
temp	float	$tmp202	%read{263,263} %write{262,262}
temp	int	$tmp203	%read{266,266} %write{265,265}
temp	float	$tmp204	%read{269,269} %write{267,267} %derivs
temp	float	$tmp205	%read{269,269} %write{268,268} %derivs
const	string	$const21	"Grader"		%read{271,271} %write{2147483647,-1}
temp	color	$tmp206	%read{273,273} %write{272,272}
const	string	$const22	"rgb"		%read{274,287} %write{2147483647,-1}
const	string	$const23	"hsv"		%read{274,287} %write{2147483647,-1}
temp	float	$tmp207	%read{277,277} %write{275,275}
temp	float	$tmp208	%read{277,277} %write{276,276}
temp	float	$tmp209	%read{278,278} %write{277,277}
temp	float	$tmp210	%read{281,281} %write{279,279}
temp	float	$tmp211	%read{281,281} %write{280,280}
temp	float	$tmp212	%read{282,282} %write{281,281}
temp	float	$tmp213	%read{285,285} %write{283,283}
temp	float	$tmp214	%read{285,285} %write{284,284}
temp	float	$tmp215	%read{286,286} %write{285,285}
temp	color	$tmp216	%read{290,290} %write{289,289}
temp	float	$tmp217	%read{289,289} %write{288,288}
temp	color	$tmp218	%read{296,296} %write{292,292}
temp	color	$tmp219	%read{295,295} %write{293,293}
temp	color	$tmp220	%read{296,296} %write{295,295}
code ___main___
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:176
# 
	vector		HSV Hue Saturation Value 	%filename{"packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl"} %line{176} %argrw{"wrrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:179
#     float heightOverscanMult = 1 - clamp(heightOverscan,0,0.9);
	functioncall	$const4 4 	%line{179} %argrw{"r"}
# /l/packages/pg/prod/mtoa/4.2.1.1/platform-linux/maya-2019/plug-ins/../bin/../osl/include/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1 roomDepth $const3 	%filename{"/l/packages/pg/prod/mtoa/4.2.1.1/platform-linux/maya-2019/plug-ins/../bin/../osl/include/stdosl.h"} %line{141} %argrw{"wrr"}
	max		roomDepthMult $tmp1 $const1 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:180
#     float widthOverscanMult = 1 - clamp(widthOverscan,0,0.9);
	functioncall	$const4 7 	%filename{"packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl"} %line{180} %argrw{"r"}
# /l/packages/pg/prod/mtoa/4.2.1.1/platform-linux/maya-2019/plug-ins/../bin/../osl/include/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp3 heightOverscan $const8 	%filename{"/l/packages/pg/prod/mtoa/4.2.1.1/platform-linux/maya-2019/plug-ins/../bin/../osl/include/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp2 $tmp3 $const7 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:180
#     float widthOverscanMult = 1 - clamp(widthOverscan,0,0.9);
	sub		heightOverscanMult $const9 $tmp2 	%filename{"packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl"} %line{180} %argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:181
#     float midgroundDepthMult = clamp(midgroundDepth,0.05,roomDepthMult-0.01);
	functioncall	$const4 11 	%line{181} %argrw{"r"}
# /l/packages/pg/prod/mtoa/4.2.1.1/platform-linux/maya-2019/plug-ins/../bin/../osl/include/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp5 widthOverscan $const8 	%filename{"/l/packages/pg/prod/mtoa/4.2.1.1/platform-linux/maya-2019/plug-ins/../bin/../osl/include/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp4 $tmp5 $const7 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:181
#     float midgroundDepthMult = clamp(midgroundDepth,0.05,roomDepthMult-0.01);
	sub		widthOverscanMult $const9 $tmp4 	%filename{"packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl"} %line{181} %argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:182
#     float midgroundOffY = midgroundOffsetY * (textureFlip*2-1) * 0.1;
	sub		$tmp6 roomDepthMult $const11 	%line{182} %argrw{"wrr"}
	functioncall	$const4 16 	%argrw{"r"}
# /l/packages/pg/prod/mtoa/4.2.1.1/platform-linux/maya-2019/plug-ins/../bin/../osl/include/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp7 midgroundDepth $tmp6 	%filename{"/l/packages/pg/prod/mtoa/4.2.1.1/platform-linux/maya-2019/plug-ins/../bin/../osl/include/stdosl.h"} %line{141} %argrw{"wrr"}
	max		midgroundDepthMult $tmp7 $const10 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:183
#     float midgroundOffX = midgroundOffsetX * (textureFlop*2-1) * 0.1;
	mul		$tmp8 textureFlip $const12 	%filename{"packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl"} %line{183} %argrw{"wrr"}
	sub		$tmp9 $tmp8 $const5 	%argrw{"wrr"}
	assign		$tmp11 $tmp9 	%argrw{"wr"}
	mul		$tmp10 midgroundOffsetY $tmp11 	%argrw{"wrr"}
	mul		midgroundOffY $tmp10 $const1 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:184
# 
	mul		$tmp12 textureFlop $const12 	%line{184} %argrw{"wrr"}
	sub		$tmp13 $tmp12 $const5 	%argrw{"wrr"}
	assign		$tmp15 $tmp13 	%argrw{"wr"}
	mul		$tmp14 midgroundOffsetX $tmp15 	%argrw{"wrr"}
	mul		midgroundOffX $tmp14 $const1 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:187
#     if (zUpAxis > 0){
	neg		$tmp16 I 	%line{187} %argrw{"wr"}
	functioncall	$const14 29 	%argrw{"r"}
# /l/packages/pg/prod/mtoa/4.2.1.1/platform-linux/maya-2019/plug-ins/../bin/../osl/include/stdosl.h:262
# vector transform (string to, vector p) { return transform("common",to,p); }
	transformv	objI $const15 $const13 $tmp16 	%filename{"/l/packages/pg/prod/mtoa/4.2.1.1/platform-linux/maya-2019/plug-ins/../bin/../osl/include/stdosl.h"} %line{262} %argrw{"wrrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:188
#       objI = vector(-objI[0],-objI[1],-objI[2]) * color(widthOverscanMult*(1/windowAspect), heightOverscanMult, 1);     //reorder to match UV for Y up axis
	gt		$tmp17 zUpAxis $const6 	%filename{"packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl"} %line{188} %argrw{"wrr"}
	if		$tmp17 42 53 	%argrw{"r"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:189
#     } else {
	compref		$tmp19 objI $const6 	%line{189} %argrw{"wrr"}
	neg		$tmp20 $tmp19 	%argrw{"wr"}
	compref		$tmp21 objI $const5 	%argrw{"wrr"}
	neg		$tmp22 $tmp21 	%argrw{"wr"}
	compref		$tmp23 objI $const12 	%argrw{"wrr"}
	neg		$tmp24 $tmp23 	%argrw{"wr"}
	vector		$tmp18 $tmp20 $tmp22 $tmp24 	%argrw{"wrrr"}
	div		$tmp26 $const9 windowAspect 	%argrw{"wrr"}
	mul		$tmp27 widthOverscanMult $tmp26 	%argrw{"wrr"}
	color		$tmp25 $tmp27 heightOverscanMult $const9 	%argrw{"wrrr"}
	mul		objI $tmp18 $tmp25 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:191
#     }
	compref		$tmp29 objI $const6 	%line{191} %argrw{"wrr"}
	neg		$tmp30 $tmp29 	%argrw{"wr"}
	compref		$tmp31 objI $const5 	%argrw{"wrr"}
	neg		$tmp32 $tmp31 	%argrw{"wr"}
	compref		$tmp33 objI $const12 	%argrw{"wrr"}
	neg		$tmp34 $tmp33 	%argrw{"wr"}
	vector		$tmp28 $tmp30 $tmp32 $tmp34 	%argrw{"wrrr"}
	div		$tmp36 $const9 windowAspect 	%argrw{"wrr"}
	mul		$tmp37 widthOverscanMult $tmp36 	%argrw{"wrr"}
	color		$tmp35 $tmp37 heightOverscanMult $const9 	%argrw{"wrrr"}
	mul		objI $tmp28 $tmp35 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:193
#     color objP = (color(u,v,0.5) * 2 - 1) * color(widthOverscanMult, heightOverscanMult, 1)  * 0.5 + 0.5;   //UV seems to be the better approach
	color		$tmp38 u v $const16 	%line{193} %argrw{"wrrr"}
	mul		$tmp39 $tmp38 $const17 	%argrw{"wrr"}
	sub		$tmp40 $tmp39 $const9 	%argrw{"wrr"}
	mul		$tmp41 $tmp40 $const16 	%argrw{"wrr"}
	add		objPOrig $tmp41 $const16 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:194
# 
	color		$tmp42 u v $const16 	%line{194} %argrw{"wrrr"}
	mul		$tmp43 $tmp42 $const17 	%argrw{"wrr"}
	sub		$tmp44 $tmp43 $const9 	%argrw{"wrr"}
	color		$tmp45 widthOverscanMult heightOverscanMult $const9 	%argrw{"wrrr"}
	mul		$tmp46 $tmp44 $tmp45 	%argrw{"wrr"}
	mul		$tmp47 $tmp46 $const16 	%argrw{"wrr"}
	add		objP $tmp47 $const16 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:197
#     color baseDepth = (objP-sections)/(-objI * roomDepthMult);
	assign		$tmp48 $const7 	%line{197} %argrw{"wr"}
	step		sections $tmp48 objI 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:198
#     color mgDepth = (objP-sections)/(-objI * midgroundDepthMult);
	sub		$tmp49 objP sections 	%line{198} %argrw{"wrr"}
	neg		$tmp50 objI 	%argrw{"wr"}
	mul		$tmp51 $tmp50 roomDepthMult 	%argrw{"wrr"}
	div		baseDepth $tmp49 $tmp51 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:199
#     color baseBack = (objP-sections)/(-objI);
	sub		$tmp52 objP sections 	%line{199} %argrw{"wrr"}
	neg		$tmp53 objI 	%argrw{"wr"}
	mul		$tmp54 $tmp53 midgroundDepthMult 	%argrw{"wrr"}
	div		mgDepth $tmp52 $tmp54 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:200
#     color baseWidth = baseDepth * roomDepthMult;
	sub		$tmp55 objP sections 	%line{200} %argrw{"wrr"}
	neg		$tmp56 objI 	%argrw{"wr"}
	div		baseBack $tmp55 $tmp56 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:201
# 
	mul		baseWidth baseDepth roomDepthMult 	%line{201} %argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:204
#     color baseDepthY = (baseDepth[0]*objI+objP + 1);
	compref		$tmp57 baseDepth $const5 	%line{204} %argrw{"wrr"}
	mul		$tmp58 $tmp57 objI 	%argrw{"wrr"}
	add		$tmp59 $tmp58 objP 	%argrw{"wrr"}
	add		baseDepthX $tmp59 $const9 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:205
#     color baseWidthX = (baseWidth[1]*objI+objP + 1);
	compref		$tmp60 baseDepth $const6 	%line{205} %argrw{"wrr"}
	mul		$tmp61 $tmp60 objI 	%argrw{"wrr"}
	add		$tmp62 $tmp61 objP 	%argrw{"wrr"}
	add		baseDepthY $tmp62 $const9 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:206
#     color baseWidthY = (baseWidth[0]*objI+objP + 1);
	compref		$tmp63 baseWidth $const5 	%line{206} %argrw{"wrr"}
	mul		$tmp64 $tmp63 objI 	%argrw{"wrr"}
	add		$tmp65 $tmp64 objP 	%argrw{"wrr"}
	add		baseWidthX $tmp65 $const9 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:207
# 
	compref		$tmp66 baseWidth $const6 	%line{207} %argrw{"wrr"}
	mul		$tmp67 $tmp66 objI 	%argrw{"wrr"}
	add		$tmp68 $tmp67 objP 	%argrw{"wrr"}
	add		baseWidthY $tmp68 $const9 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:209
#     float vertU = baseWidthX[0] - 1;
	compref		$tmp69 baseDepthY $const12 	%line{209} %argrw{"wrr"}
	sub		horizU $tmp69 $const16 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:210
#     float horizV = baseWidthY[1] - 1;
	compref		$tmp70 baseWidthX $const6 	%line{210} %argrw{"wrr"}
	sub		vertU $tmp70 $const9 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:211
#     float vertV = baseDepthX[2] - 0.5;
	compref		$tmp71 baseWidthY $const5 	%line{211} %argrw{"wrr"}
	sub		horizV $tmp71 $const9 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:212
# 
	compref		$tmp72 baseDepthX $const12 	%line{212} %argrw{"wrr"}
	sub		vertV $tmp72 $const16 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:215
#     color sideWallsUV = color(horizU, horizV, 0) / 3;
	step		$tmp73 $const7 horizU 	%line{215} %argrw{"wrr"}
	sub		$tmp76 $const9 horizV 	%argrw{"wrr"}
	max		$tmp75 horizV $tmp76 	%argrw{"wrr"}
	sub		$tmp77 $const9 $tmp75 	%argrw{"wrr"}
	step		$tmp74 $const7 $tmp77 	%argrw{"wrr"}
	mul		sideWallsMask $tmp73 $tmp74 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:216
#     color rWallUV = (sideWallsUV + color(2.0/3.0, 1.0/3.0, 0)) * sideWallsMask * sections[0];
	color		$tmp78 horizU horizV $const7 	%line{216} %argrw{"wrrr"}
	div		sideWallsUV $tmp78 $const19 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:217
#     color lWallUV = (sideWallsUV + color(0.0, 1.0/3.0, 0)) * sideWallsMask * (1-sections[0]);
	div		$tmp80 $const17 $const19 	%line{217} %argrw{"wrr"}
	div		$tmp81 $const9 $const19 	%argrw{"wrr"}
	color		$tmp79 $tmp80 $tmp81 $const7 	%argrw{"wrrr"}
	add		$tmp82 sideWallsUV $tmp79 	%argrw{"wrr"}
	mul		$tmp83 $tmp82 sideWallsMask 	%argrw{"wrr"}
	compref		$tmp84 sections $const6 	%argrw{"wrr"}
	mul		rWallUV $tmp83 $tmp84 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:218
#     lWallUV[0] = (1.0/3.0 - lWallUV[0]) * sideWallsMask * (1-sections[0]);
	div		$tmp86 $const9 $const19 	%line{218} %argrw{"wrr"}
	color		$tmp85 $const7 $tmp86 $const7 	%argrw{"wrrr"}
	add		$tmp87 sideWallsUV $tmp85 	%argrw{"wrr"}
	mul		$tmp88 $tmp87 sideWallsMask 	%argrw{"wrr"}
	compref		$tmp89 sections $const6 	%argrw{"wrr"}
	sub		$tmp90 $const9 $tmp89 	%argrw{"wrr"}
	mul		lWallUV $tmp88 $tmp90 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:219
# 
	div		$tmp91 $const9 $const19 	%line{219} %argrw{"wrr"}
	compref		$tmp92 lWallUV $const6 	%argrw{"wrr"}
	sub		$tmp93 $tmp91 $tmp92 	%argrw{"wrr"}
	mul		$tmp94 $tmp93 sideWallsMask 	%argrw{"wrr"}
	compref		$tmp95 sections $const6 	%argrw{"wrr"}
	sub		$tmp96 $const9 $tmp95 	%argrw{"wrr"}
	mul		$tmp97 $tmp94 $tmp96 	%argrw{"wrr"}
	compassign	lWallUV $const6 $tmp97 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:221
#     color FloorCeilUV = color(vertU, vertV, 0) / 3;
	step		$tmp98 $const7 vertV 	%line{221} %argrw{"wrr"}
	sub		$tmp101 $const9 vertU 	%argrw{"wrr"}
	max		$tmp100 vertU $tmp101 	%argrw{"wrr"}
	sub		$tmp102 $const9 $tmp100 	%argrw{"wrr"}
	step		$tmp99 $const7 $tmp102 	%argrw{"wrr"}
	mul		FloorCeilMask $tmp98 $tmp99 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:222
#     color ceilUV = (FloorCeilUV + color(1.0/3.0, 2.0/3.0, 0)) * FloorCeilMask * sections[1];
	color		$tmp103 vertU vertV $const7 	%line{222} %argrw{"wrrr"}
	div		FloorCeilUV $tmp103 $const19 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:223
#     color floorUV = (FloorCeilUV + color(1.0/3.0, 0, 0)) * FloorCeilMask * (1-sections[1]);
	div		$tmp105 $const9 $const19 	%line{223} %argrw{"wrr"}
	div		$tmp106 $const17 $const19 	%argrw{"wrr"}
	color		$tmp104 $tmp105 $tmp106 $const7 	%argrw{"wrrr"}
	add		$tmp107 FloorCeilUV $tmp104 	%argrw{"wrr"}
	mul		$tmp108 $tmp107 FloorCeilMask 	%argrw{"wrr"}
	compref		$tmp109 sections $const5 	%argrw{"wrr"}
	mul		ceilUV $tmp108 $tmp109 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:224
#     floorUV[1] = (1.0/3.0 - floorUV[1]) * FloorCeilMask * (1-sections[1]);
	div		$tmp111 $const9 $const19 	%line{224} %argrw{"wrr"}
	color		$tmp110 $tmp111 $const7 $const7 	%argrw{"wrrr"}
	add		$tmp112 FloorCeilUV $tmp110 	%argrw{"wrr"}
	mul		$tmp113 $tmp112 FloorCeilMask 	%argrw{"wrr"}
	compref		$tmp114 sections $const5 	%argrw{"wrr"}
	sub		$tmp115 $const9 $tmp114 	%argrw{"wrr"}
	mul		floorUV $tmp113 $tmp115 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:225
# 
	div		$tmp116 $const9 $const19 	%line{225} %argrw{"wrr"}
	compref		$tmp117 floorUV $const5 	%argrw{"wrr"}
	sub		$tmp118 $tmp116 $tmp117 	%argrw{"wrr"}
	mul		$tmp119 $tmp118 FloorCeilMask 	%argrw{"wrr"}
	compref		$tmp120 sections $const5 	%argrw{"wrr"}
	sub		$tmp121 $const9 $tmp120 	%argrw{"wrr"}
	mul		$tmp122 $tmp119 $tmp121 	%argrw{"wrr"}
	compassign	floorUV $const5 $tmp122 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:227
# 
	compref		$tmp123 baseBack $const12 	%line{227} %argrw{"wrr"}
	mul		$tmp124 $tmp123 objI 	%argrw{"wrr"}
	div		$tmp125 objP $const17 	%argrw{"wrr"}
	div		$tmp126 $tmp125 roomDepthMult 	%argrw{"wrr"}
	add		$tmp127 $tmp124 $tmp126 	%argrw{"wrr"}
	mul		$tmp128 roomDepthMult $const17 	%argrw{"wrr"}
	mul		$tmp129 $tmp127 $tmp128 	%argrw{"wrr"}
	div		$tmp130 $tmp129 $const19 	%argrw{"wrr"}
	div		$tmp132 $const9 $const19 	%argrw{"wrr"}
	div		$tmp133 $const9 $const19 	%argrw{"wrr"}
	color		$tmp131 $tmp132 $tmp133 $const7 	%argrw{"wrrr"}
	add		$tmp134 $tmp130 $tmp131 	%argrw{"wrr"}
	step		$tmp136 $const7 horizU 	%argrw{"wrr"}
	step		$tmp137 $const7 vertV 	%argrw{"wrr"}
	max		$tmp135 $tmp136 $tmp137 	%argrw{"wrr"}
	sub		$tmp138 $const9 $tmp135 	%argrw{"wrr"}
	mul		backWallUV $tmp134 $tmp138 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:229
#     float midgroundMask = step( 0, midgroundUV[1] * 3 * (1-midgroundUV[1]*3) ) * step( 0, midgroundUV[0] * (1.0/3.0-midgroundUV[0]) );
	div		$tmp139 $const9 $const19 	%line{229} %argrw{"wrr"}
	compref		$tmp140 baseBack $const12 	%argrw{"wrr"}
	mul		$tmp141 $tmp140 objI 	%argrw{"wrr"}
	mul		$tmp142 midgroundDepthMult $const17 	%argrw{"wrr"}
	div		$tmp143 objP $tmp142 	%argrw{"wrr"}
	add		$tmp144 $tmp141 $tmp143 	%argrw{"wrr"}
	mul		$tmp145 midgroundDepthMult $const17 	%argrw{"wrr"}
	mul		$tmp146 $tmp144 $tmp145 	%argrw{"wrr"}
	div		$tmp147 $tmp146 $const19 	%argrw{"wrr"}
	sub		midgroundUV $tmp139 $tmp147 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:230
#     midgroundUV = (color(midgroundOffX, midgroundOffY, 0) + midgroundUV);
	compref		$tmp149 midgroundUV $const5 	%line{230} %argrw{"wrr"}
	mul		$tmp150 $tmp149 $const19 	%argrw{"wrr"}
	compref		$tmp151 midgroundUV $const5 	%argrw{"wrr"}
	mul		$tmp152 $tmp151 $const19 	%argrw{"wrr"}
	sub		$tmp153 $const9 $tmp152 	%argrw{"wrr"}
	mul		$tmp154 $tmp150 $tmp153 	%argrw{"wrr"}
	step		$tmp148 $const7 $tmp154 	%argrw{"wrr"}
	compref		$tmp156 midgroundUV $const6 	%argrw{"wrr"}
	div		$tmp157 $const9 $const19 	%argrw{"wrr"}
	compref		$tmp158 midgroundUV $const6 	%argrw{"wrr"}
	sub		$tmp159 $tmp157 $tmp158 	%argrw{"wrr"}
	mul		$tmp160 $tmp156 $tmp159 	%argrw{"wrr"}
	step		$tmp155 $const7 $tmp160 	%argrw{"wrr"}
	mul		midgroundMask $tmp148 $tmp155 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:231
#     midgroundUV[1] = (1-midgroundUV[1]) - 2.0/3.0;
	color		$tmp161 midgroundOffX midgroundOffY $const7 	%line{231} %argrw{"wrrr"}
	add		midgroundUV $tmp161 midgroundUV 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:232
# 
	compref		$tmp162 midgroundUV $const5 	%line{232} %argrw{"wrr"}
	sub		$tmp163 $const9 $tmp162 	%argrw{"wrr"}
	div		$tmp164 $const17 $const19 	%argrw{"wrr"}
	sub		$tmp165 $tmp163 $tmp164 	%argrw{"wrr"}
	compassign	midgroundUV $const5 $tmp165 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:234
#     curtainsUV[0] = 1.0/3.0 - curtainsUV[0];
	div		$tmp167 $const9 $const19 	%line{234} %argrw{"wrr"}
	div		$tmp168 $const9 $const19 	%argrw{"wrr"}
	color		$tmp166 $tmp167 $tmp168 $const9 	%argrw{"wrrr"}
	mul		curtainsUV objPOrig $tmp166 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:235
#     curtainsUV[1] = 2.0/3.0 + curtainsUV[1]; //VRay specific
	div		$tmp169 $const9 $const19 	%line{235} %argrw{"wrr"}
	compref		$tmp170 curtainsUV $const6 	%argrw{"wrr"}
	sub		$tmp171 $tmp169 $tmp170 	%argrw{"wrr"}
	compassign	curtainsUV $const6 $tmp171 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:236
# 
	div		$tmp172 $const17 $const19 	%line{236} %argrw{"wrr"}
	compref		$tmp173 curtainsUV $const5 	%argrw{"wrr"}
	add		$tmp174 $tmp172 $tmp173 	%argrw{"wrr"}
	compassign	curtainsUV $const5 $tmp174 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:238
# 
	add		$tmp175 ceilUV floorUV 	%line{238} %argrw{"wrr"}
	add		$tmp176 $tmp175 rWallUV 	%argrw{"wrr"}
	add		$tmp177 $tmp176 lWallUV 	%argrw{"wrr"}
	add		finalUV $tmp177 backWallUV 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:241
#         midgroundUV[0] = 1.0/3.0 - midgroundUV[0];
	lt		$tmp178 textureFlop $const5 	%line{241} %argrw{"wrr"}
	if		$tmp178 237 240 	%argrw{"r"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:242
#         curtainsUV[0] = 1.0/3.0 - curtainsUV[0];
	div		$tmp179 $const9 $const19 	%line{242} %argrw{"wrr"}
	compref		$tmp180 midgroundUV $const6 	%argrw{"wrr"}
	sub		$tmp181 $tmp179 $tmp180 	%argrw{"wrr"}
	compassign	midgroundUV $const6 $tmp181 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:243
#     }else
	div		$tmp182 $const9 $const19 	%line{243} %argrw{"wrr"}
	compref		$tmp183 curtainsUV $const6 	%argrw{"wrr"}
	sub		$tmp184 $tmp182 $tmp183 	%argrw{"wrr"}
	compassign	curtainsUV $const6 $tmp184 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:245
#     if (textureFlip > 0){
	compref		$tmp185 finalUV $const6 	%line{245} %argrw{"wrr"}
	sub		$tmp186 $const9 $tmp185 	%argrw{"wrr"}
	compassign	finalUV $const6 $tmp186 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:246
#         finalUV[1] = 1-finalUV[1];
	gt		$tmp187 textureFlip $const6 	%line{246} %argrw{"wrr"}
	if		$tmp187 254 254 	%argrw{"r"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:247
#         midgroundUV[1] = 1.0/3.0 - midgroundUV[1]; // VRay specific
	compref		$tmp188 finalUV $const5 	%line{247} %argrw{"wrr"}
	sub		$tmp189 $const9 $tmp188 	%argrw{"wrr"}
	compassign	finalUV $const5 $tmp189 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:248
#         curtainsUV[1] = 1 - curtainsUV[1] + 2.0/3.0; // VRay specific
	div		$tmp190 $const9 $const19 	%line{248} %argrw{"wrr"}
	compref		$tmp191 midgroundUV $const5 	%argrw{"wrr"}
	sub		$tmp192 $tmp190 $tmp191 	%argrw{"wrr"}
	compassign	midgroundUV $const5 $tmp192 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:249
#     }
	compref		$tmp193 curtainsUV $const5 	%line{249} %argrw{"wrr"}
	sub		$tmp194 $const9 $tmp193 	%argrw{"wrr"}
	div		$tmp195 $const17 $const19 	%argrw{"wrr"}
	add		$tmp196 $tmp194 $tmp195 	%argrw{"wrr"}
	compassign	curtainsUV $const5 $tmp196 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:252
#     color finalRGB;
	compref		$tmp197 finalUV $const6 	%line{252} %argrw{"wrr"}
	compref		$tmp198 finalUV $const5 	%argrw{"wrr"}
	texture		roomRGB input_tex $tmp197 $tmp198 	%argrw{"wrrr"} %argderivs{2,3}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:256
#         float midgroundA;
	gt		$tmp199 enableMidground $const6 	%line{256} %argrw{"wrr"}
	if		$tmp199 264 265 	%argrw{"r"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:258
#         finalRGB = mix(roomRGB,midgroundRGB,midgroundA * midgroundMask); //VRay specific
	compref		$tmp200 midgroundUV $const6 	%line{258} %argrw{"wrr"}
	compref		$tmp201 midgroundUV $const5 	%argrw{"wrr"}
	texture		___342_midgroundRGB input_tex $tmp200 $tmp201 $const20 ___342_midgroundA 	%argrw{"wrrrrw"} %argderivs{2,3}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:259
#     }
	mul		$tmp202 ___342_midgroundA midgroundMask 	%line{259} %argrw{"wrr"}
	mix		finalRGB roomRGB ___342_midgroundRGB $tmp202 	%argrw{"wrrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:262
#     }
	assign		finalRGB roomRGB 	%line{262} %argrw{"wr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:266
#         float curtainsA;
	gt		$tmp203 enableCurtains $const6 	%line{266} %argrw{"wrr"}
	if		$tmp203 271 271 	%argrw{"r"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:268
#         finalRGB = mix(finalRGB,curtainsRGB,curtainsA);
	compref		$tmp204 curtainsUV $const6 	%line{268} %argrw{"wrr"}
	compref		$tmp205 curtainsUV $const5 	%argrw{"wrr"}
	texture		___344_curtainsRGB input_tex $tmp204 $tmp205 $const20 ___344_curtainsA 	%argrw{"wrrrrw"} %argderivs{2,3}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:269
#     }
	mix		finalRGB finalRGB ___344_curtainsRGB ___344_curtainsA 	%line{269} %argrw{"wrrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:274
# 
	functioncall	$const21 298 	%line{274} %argrw{"r"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:14
#     color hsv = transformc("rgb", "hsv", col);
	sub		$tmp206 finalRGB InputMin 	%line{14} %argrw{"wrr"}
	div		___337_col $tmp206 InputMax 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:15
#     hsv[0] += HSV[0];
	transformc	___337_hsv $const22 $const23 ___337_col 	%line{15} %argrw{"wrrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:16
#     hsv[1] *= HSV[1];
	compref		$tmp207 ___337_hsv $const6 	%line{16} %argrw{"wrr"}
	compref		$tmp208 HSV $const6 	%argrw{"wrr"}
	add		$tmp209 $tmp207 $tmp208 	%argrw{"wrr"}
	compassign	___337_hsv $const6 $tmp209 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:17
#     hsv[2] *= HSV[2];
	compref		$tmp210 ___337_hsv $const5 	%line{17} %argrw{"wrr"}
	compref		$tmp211 HSV $const5 	%argrw{"wrr"}
	mul		$tmp212 $tmp210 $tmp211 	%argrw{"wrr"}
	compassign	___337_hsv $const5 $tmp212 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:18
#     col = transformc("hsv", "rgb", hsv);
	compref		$tmp213 ___337_hsv $const12 	%line{18} %argrw{"wrr"}
	compref		$tmp214 HSV $const12 	%argrw{"wrr"}
	mul		$tmp215 $tmp213 $tmp214 	%argrw{"wrr"}
	compassign	___337_hsv $const12 $tmp215 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:19
#     Out = mix(OutputMin, OutputMax, pow(col, 1.0/MidTones));
	transformc	___337_col $const23 $const22 ___337_hsv 	%line{19} %argrw{"wrrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:20
#     if (Clamp) Out = clamp(Out, 0.0, 1.0);
	div		$tmp217 $const9 MidTones 	%line{20} %argrw{"wrr"}
	pow		$tmp216 ___337_col $tmp217 	%argrw{"wrr"}
	mix		___337_Out OutputMin OutputMax $tmp216 	%argrw{"wrrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:21
# 
	if		Clamp 297 297 	%line{21} %argrw{"r"}
	assign		$tmp218 $const7 	%argrw{"wr"}
	assign		$tmp219 $const9 	%argrw{"wr"}
	functioncall	$const4 297 	%argrw{"r"}
# /l/packages/pg/prod/mtoa/4.2.1.1/platform-linux/maya-2019/plug-ins/../bin/../osl/include/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp220 ___337_Out $tmp219 	%filename{"/l/packages/pg/prod/mtoa/4.2.1.1/platform-linux/maya-2019/plug-ins/../bin/../osl/include/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___337_Out $tmp220 $tmp218 	%argrw{"wrr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:23
#  }
	assign		finalRGB ___337_Out 	%filename{"packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl"} %line{23} %argrw{"wr"}
# packages/lxdcc_rsc/0.99.99/script/python/.setup/arnold/shaders/aiJiWindowBoxArnold.osl:276
# 
	assign		result finalRGB 	%line{276} %argrw{"wr"}
	end
